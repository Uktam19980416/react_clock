{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","timerId","this","setInterval","console","log","setState","prevProp","from","props","clearInterval","className","React","Component","App","isClockVisible","clockName","hideClock","showClock","setRandomName","randomNumber","Math","round","random","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WAEzBC,QAAQC,IAAI,EAAKR,MAAMC,MAEvB,EAAKQ,SAAS,CAAER,MAAM,IAAIC,MAAOC,yBAChC,OAbP,gCAgBE,SAAmBO,GACbA,EAASC,OAASN,KAAKO,MAAMD,MAE/BJ,QAAQC,IAAR,iCAAsCE,EAASC,KAA/C,eAA0DN,KAAKO,MAAMD,SAnB3E,kCAuBE,WACMN,KAAKD,SACPS,cAAcR,KAAKD,WAzBzB,oBA6BE,WACE,IAAQH,EAASI,KAAKL,MAAdC,KAER,OACE,qBAAKa,UAAU,MAAf,SACE,4BAAKb,UAlCb,GAA2Bc,IAAMC,WCH3BC,E,4MACJjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,G,EAGbC,UAAY,WACV,EAAKX,SAAS,CAAES,gBAAgB,K,EAGlCG,UAAY,WACV,EAAKZ,SAAS,CAAES,gBAAgB,K,EAGlCI,cAAgB,WACd,IAAMC,EAAeC,KAAKC,MAAsB,IAAhBD,KAAKE,UAErC,EAAKjB,SAAS,CAAEU,UAAWI,K,4CAG7B,WACE,MAAsClB,KAAKL,MAAnCkB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,sBAAKL,UAAU,MAAf,UACE,6CACA,kDAAmBK,KACnB,8BACE,4CACCD,GACC,cAAC,EAAD,CAAOP,KAAMQ,OAGjB,wBACEQ,KAAK,SACLC,QAASvB,KAAKgB,UAFhB,mBAOA,wBACEM,KAAK,SACLC,QAASvB,KAAKe,UAFhB,kBASA,wBACEO,KAAK,SACLC,QAASvB,KAAKiB,cAFhB,sC,GAjDUP,IAAMC,WA4DTC,ICjEfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4268acbc.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\ninterface Props {\n  from: number;\n}\n\ninterface State {\n  time: string;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  timerId?: NodeJS.Timer;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      // eslint-disable-next-line no-console\n      console.log(this.state.time);\n\n      this.setState({ time: new Date().toLocaleTimeString() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProp: Props) {\n    if (prevProp.from !== this.props.from) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock updated from ${prevProp.from} to ${this.props.from}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p>{ time }</p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\n\ninterface State {\n  isClockVisible: boolean,\n  clockName: number,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 1,\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  setRandomName = () => {\n    const randomNumber = Math.round(Math.random() * 1000);\n\n    this.setState({ clockName: randomNumber });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>{`Clock Name: ${clockName}`}</p>\n        <p>\n          <p>Local time:</p>\n          {isClockVisible && (\n            <Clock from={clockName} />\n          )}\n        </p>\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n        >\n          Start\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n        >\n          Stop\n        </button>\n\n        {/* <br /> */}\n\n        <button\n          type=\"button\"\n          onClick={this.setRandomName}\n        >\n          Random Clock Name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}