{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","timerId","this","setInterval","setState","clearInterval","className","React","Component","App","isClockVisible","clockName","from","type","onClick","Math","round","random","ReactDOM","render","document","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,yBAChC,OAVP,kCAaE,WACME,KAAKD,SACPI,cAAcH,KAAKD,WAfzB,oBAmBE,WACE,IAAQH,EAASI,KAAKL,MAAdC,KAER,OACE,qBAAKQ,UAAU,MAAf,SACE,4BAAKR,UAxBb,GAA2BS,IAAMC,WCA3BC,E,4MACJZ,MAAQ,CACNa,gBAAgB,EAChBC,UAAW,G,4CAGb,WAAU,IAAD,OACP,EAAsCT,KAAKL,MAAnCa,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,sBAAKL,UAAU,MAAf,UACE,6CACA,kDAAmBK,KACnB,8BACE,4CACCD,GACC,cAAC,EAAD,CAAOE,KAAMD,OAGjB,wBACEE,KAAK,SACLC,QAAS,WACP,EAAKV,SAAS,CACZM,gBAAgB,KAJtB,mBAWA,wBACEG,KAAK,SACLC,QAAS,WACP,EAAKV,SAAS,CACZM,gBAAgB,KAJtB,kBAaA,wBACEG,KAAK,SACLC,QAAS,kBAAM,EAAKV,SAAS,CAC3BO,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,aAH/B,sC,GA3CUV,IAAMC,WAmETC,IC3EfS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0a0810b2.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\ninterface Props {\n  from: number;\n}\n\ninterface State {\n  time: string;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  timerId?: NodeJS.Timer;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ time: new Date().toLocaleTimeString() });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p>{ time }</p>\n\n      </div>\n    );\n  }\n}\n","import React from 'react';\n// import './App.scss';\n\nimport { Clock } from './components/Clock';\n// import { Countdown } from './Countdown';\n\ninterface State {\n  isClockVisible: boolean,\n  clockName: number,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 1,\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>{`Clock Name: ${clockName}`}</p>\n        <p>\n          <p>Local time:</p>\n          {isClockVisible && (\n            <Clock from={clockName} />\n          )}\n        </p>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({\n              isClockVisible: true,\n            });\n          }}\n        >\n          Start\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({\n              isClockVisible: false,\n            });\n          }}\n        >\n          Stop\n        </button>\n\n        {/* <br /> */}\n\n        <button\n          type=\"button\"\n          onClick={() => this.setState({\n            clockName: Math.round(Math.random() * 1000),\n          })}\n        >\n          Random Clock Name\n        </button>\n      </div>\n    );\n  }\n}\n// const timerId: NodeJS.Timer = setInterval(() => {\n//   const date: Date = new Date();\n\n//   // eslint-disable-next-line\n//   console.log(date.toLocaleTimeString());\n// }, 1000);\n\n// eslint-disable-next-line\n  // console.log(timerId);\n\n// };\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}